const crypto = require('crypto')


const {
  critical,
  normal,
  warning
} = require('@xsy-customize/errorcode').levelCode

const {
  aesDecrtptFailed
} = require('@xsy-customize/errorcode').detailCode

const aesDecrypt = (key, iv, crypted) => {
  // console.log("===>crypted")
  // console.log(crypted)
  // crypted = new Buffer(crypted, 'base64')
  const decipher = crypto.createDecipheriv('aes-128-cbc', key, iv)
  let decoded = decipher.update(crypted, 'base64', 'utf8')
  decoded += decipher.final('utf8')
  // console.log("===>decoded")
  // console.log(decoded)
  return decoded
}

const postData = (key, iv) => async (ctx, next) => {
  return new Promise(function(resolve, reject) {
    const { data } = ctx.request.body
    const decryptedBody = JSON.parse(aesDecrypt(key, iv, data))
    if (!decryptedBody) {
      reject(new Error('加密数据解析错误'))
      return
    }
    ctx.request.body = decryptedBody
    resolve(next())
  }).catch(e => {
    if (ctx.state.moduleCode) {
      ctx.state.code = `${critical}${ctx.state.moduleCode}${aesDecrtptFailed}`
      } else {
      ctx.state.code = -1
      };
      throw e
  });
}

module.exports = {
  postData,
}
